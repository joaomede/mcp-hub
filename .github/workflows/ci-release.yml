name: CI - Unit Tests (on Release)

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11.10'
          check-latest: true
          cache: 'pip'
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libffi-dev libssl-dev python3-dev
      - name: Diagnostic - python & pip
        run: |
          echo "=== Python Environment Debugging ==="
          python --version
          python -c "import sys; print(f'Python executable: {sys.executable}')"
          python -c "import sys; print(f'Python version info: {sys.version_info}')"
          pip --version
          which python
          which python3
          which python3.11
          echo "=== Available Python in toolcache ==="
          ls -la /opt/hostedtoolcache/Python/ || echo "No toolcache found"
          echo "=== Environment PATH ==="
          echo $PATH
          echo "=== Force Python 3.11 usage ==="
          export PATH="/opt/hostedtoolcache/Python/3.11.10/x64/bin:$PATH"
          python --version

      - name: Force Python 3.11 in PATH
        run: |
          echo "Setting up Python 3.11 path priority"
          PYTHON_PATH=$(which python)
          echo "Current Python: $PYTHON_PATH"
          # Add the specific Python 3.11 path to the front of PATH
          echo "/opt/hostedtoolcache/Python/3.11.10/x64/bin" >> $GITHUB_PATH

      - name: Install Poetry (if needed)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install poetry || true

      - name: Install project (editable)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          # install package in editable mode so tests run against workspace
          python -m pip install -e .

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          # project dependencies are installed by the editable install above; only install test/runtime tools here
          python -m pip install pytest pytest-asyncio pytest-cov
      - name: Run unit tests with coverage
        run: |
          PYTHONPATH=src python -m pytest --cov=src/mcp_hub tests/unit --cov-report=term-missing -v

  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
